/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package destiny2;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class App {
    //-------------------------------------------------------------------------
    // Instance variables

    private Map<Type, List<Armor>> vault = new HashMap<>();


    //-------------------------------------------------------------------------
    // The App

    public void start() {
        // FIRST, add the contents of the vault (so far as I care)
        add(Type.HEAD, "Warmind's Avatar Headpiece", 10, 14,  6, 16, 10,  6);

        add(Type.ARMS, "Warmind's Avatar Gloves",     2, 22, 10, 16,  6, 10);

        add(Type.BODY, "Phoenix Protocol",            4,  2, 29,  2, 20,  8);

        add(Type.LEGS, "Warmind's Avatar Pants",     10, 22,  2, 10, 10, 10);

        // NEXT, generate the possible choices
        var sets = generateSets();

        sets.forEach(ArmorSet::dump);
    }

    //-------------------------------------------------------------------------
    // Data Builders

    // Generates all possible armor sets from the available choices.
    private List<ArmorSet> generateSets() {
        var result = new ArrayList<ArmorSet>();

        for (var head = 0; head < vault.get(Type.HEAD).size(); head++) {
            for (var arms = 0; arms < vault.get(Type.ARMS).size(); arms++) {
                for (var body = 0; body < vault.get(Type.BODY).size(); body++) {
                    for (var legs = 0; legs < vault.get(Type.LEGS).size(); legs++) {
                        result.add(makeSet(head, arms, body, legs));
                    }
                }
            }
        }

        return result;
    }

    private ArmorSet makeSet(int head, int arms, int body, int legs) {
        var set = new ArmorSet();

        set.put(Type.HEAD, vault.get(Type.HEAD).get(head));
        set.put(Type.ARMS, vault.get(Type.ARMS).get(arms));
        set.put(Type.BODY, vault.get(Type.BODY).get(body));
        set.put(Type.LEGS, vault.get(Type.LEGS).get(legs));

        return set;
    }

    private void add(
        Type type,
        String name,
        int mob,
        int res,
        int rec,
        int dis,
        int int1,
        int str)
    {
        var armor = new Armor(type, name);
        armor.put(Stat.MOB, mob);
        armor.put(Stat.RES, res);
        armor.put(Stat.REC, rec);
        armor.put(Stat.DIS, dis);
        armor.put(Stat.INT, int1);
        armor.put(Stat.STR, str);

        vault.putIfAbsent(type, new ArrayList<>());
        vault.get(type).add(armor);
    }

    void dumpVault() {
        for (Type type : Type.values()) {
            for (Armor armor : vault.get(type)) {
                println(armor.data());
            }
        }
    }

    void println(String text) {
        System.out.println(text);
    }

    //-------------------------------------------------------------------------
    // Main
    public static void main(String[] args) {
        new App().start();
    }
}
